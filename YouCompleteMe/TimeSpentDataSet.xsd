<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="TimeSpentDataSet" targetNamespace="http://tempuri.org/TimeSpentDataSet.xsd" xmlns:mstns="http://tempuri.org/TimeSpentDataSet.xsd" xmlns="http://tempuri.org/TimeSpentDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="project6920ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="project6920ConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.YouCompleteMe.Properties.Settings.GlobalReference.Default.project6920ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="activitiesTableAdapter" GeneratorDataComponentClassName="activitiesTableAdapter" Name="activities" UserDataComponentName="activitiesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="project6920ConnectionString (Settings)" DbObjectName="project6920.dbo.activities" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[activities] WHERE (([taskID] = @Original_taskID) AND ([seconds] = @Original_seconds))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_taskID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="taskID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_seconds" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="seconds" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[activities] ([taskID], [seconds]) VALUES (@taskID, @seconds);
SELECT taskID, seconds FROM activities WHERE (taskID = @taskID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@taskID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="taskID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@seconds" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="seconds" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT taskID, seconds FROM dbo.activities</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[activities] SET [taskID] = @taskID, [seconds] = @seconds WHERE (([taskID] = @Original_taskID) AND ([seconds] = @Original_seconds));
SELECT taskID, seconds FROM activities WHERE (taskID = @taskID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@taskID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="taskID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@seconds" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="seconds" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_taskID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="taskID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_seconds" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="seconds" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="taskID" DataSetColumn="taskID" />
              <Mapping SourceColumn="seconds" DataSetColumn="seconds" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="tasksTableAdapter" GeneratorDataComponentClassName="tasksTableAdapter" Name="tasks" UserDataComponentName="tasksTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="project6920ConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        t.title, t.createdDate, a.seconds, t.completed
FROM            tasks AS t INNER JOIN
                         activities AS a ON t.taskID = a.taskID
WHERE        (t.task_owner = @id) AND (a.startTime &gt;= @start) AND (a.startTime &lt;= @end)
--GROUP BY  t.title, t.createdDate, t.completed</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="task_owner" DataSourceName="project6920.dbo.tasks" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="task_owner" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="start" ColumnName="startTime" DataSourceName="project6920.dbo.activities" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@start" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="startTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="end" ColumnName="startTime" DataSourceName="project6920.dbo.activities" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@end" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="startTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="title" DataSetColumn="title" />
              <Mapping SourceColumn="createdDate" DataSetColumn="createdDate" />
              <Mapping SourceColumn="completed" DataSetColumn="completed" />
              <Mapping SourceColumn="seconds" DataSetColumn="seconds" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="TimeSpentDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="TimeSpentDataSet" msprop:Generator_UserDSName="TimeSpentDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="activities" msprop:Generator_TableClassName="activitiesDataTable" msprop:Generator_TableVarName="tableactivities" msprop:Generator_TablePropName="activities" msprop:Generator_RowDeletingName="activitiesRowDeleting" msprop:Generator_RowChangingName="activitiesRowChanging" msprop:Generator_RowEvHandlerName="activitiesRowChangeEventHandler" msprop:Generator_RowDeletedName="activitiesRowDeleted" msprop:Generator_UserTableName="activities" msprop:Generator_RowChangedName="activitiesRowChanged" msprop:Generator_RowEvArgName="activitiesRowChangeEvent" msprop:Generator_RowClassName="activitiesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="taskID" msprop:Generator_ColumnVarNameInTable="columntaskID" msprop:Generator_ColumnPropNameInRow="taskID" msprop:Generator_ColumnPropNameInTable="taskIDColumn" msprop:Generator_UserColumnName="taskID" type="xs:int" />
              <xs:element name="seconds" msprop:Generator_ColumnVarNameInTable="columnseconds" msprop:Generator_ColumnPropNameInRow="seconds" msprop:Generator_ColumnPropNameInTable="secondsColumn" msprop:Generator_UserColumnName="seconds" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tasks" msprop:Generator_TableClassName="tasksDataTable" msprop:Generator_TableVarName="tabletasks" msprop:Generator_TablePropName="tasks" msprop:Generator_RowDeletingName="tasksRowDeleting" msprop:Generator_RowChangingName="tasksRowChanging" msprop:Generator_RowEvHandlerName="tasksRowChangeEventHandler" msprop:Generator_RowDeletedName="tasksRowDeleted" msprop:Generator_UserTableName="tasks" msprop:Generator_RowChangedName="tasksRowChanged" msprop:Generator_RowEvArgName="tasksRowChangeEvent" msprop:Generator_RowClassName="tasksRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="title" msprop:Generator_ColumnVarNameInTable="columntitle" msprop:Generator_ColumnPropNameInRow="title" msprop:Generator_ColumnPropNameInTable="titleColumn" msprop:Generator_UserColumnName="title">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="createdDate" msprop:Generator_ColumnVarNameInTable="columncreatedDate" msprop:Generator_ColumnPropNameInRow="createdDate" msprop:Generator_ColumnPropNameInTable="createdDateColumn" msprop:Generator_UserColumnName="createdDate" type="xs:dateTime" />
              <xs:element name="completed" msprop:Generator_ColumnVarNameInTable="columncompleted" msprop:Generator_ColumnPropNameInRow="completed" msprop:Generator_ColumnPropNameInTable="completedColumn" msprop:Generator_UserColumnName="completed" type="xs:boolean" />
              <xs:element name="seconds" msprop:Generator_ColumnVarNameInTable="columnseconds" msprop:Generator_ColumnPropNameInRow="seconds" msprop:Generator_ColumnPropNameInTable="secondsColumn" msprop:Generator_UserColumnName="seconds" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:activities" />
      <xs:field xpath="mstns:taskID" />
    </xs:unique>
  </xs:element>
</xs:schema>